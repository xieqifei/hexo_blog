[
  {
    "id": 31692714,
    "slug": "fo0ngh",
    "title": "语雀+本地hexo博客书写",
    "book_id": 11067647,
    "book": {
      "id": 11067647,
      "type": "Book",
      "slug": "blog",
      "name": "博客专栏",
      "user_id": 12641647,
      "description": "分享与交流你的知识",
      "creator_id": 12641647,
      "public": 1,
      "items_count": 1,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-02-20T22:56:08.279Z",
      "updated_at": "2021-02-20T22:56:08.000Z",
      "created_at": "2021-02-20T16:32:01.000Z",
      "namespace": "xieqifei/blog",
      "user": {
        "id": 12641647,
        "type": "User",
        "login": "xieqifei",
        "name": "谢啓飞",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2021/jpeg/anonymous/1613575994068-2712af8a-c5ba-44e5-977c-04998ca03141.jpeg",
        "books_count": 1,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2021-02-17T15:33:34.000Z",
        "updated_at": "2021-02-20T16:34:05.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 12641647,
    "creator": {
      "id": 12641647,
      "type": "User",
      "login": "xieqifei",
      "name": "谢啓飞",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2021/jpeg/anonymous/1613575994068-2712af8a-c5ba-44e5-977c-04998ca03141.jpeg",
      "books_count": 1,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2021-02-17T15:33:34.000Z",
      "updated_at": "2021-02-20T16:34:05.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "我一直在寻找一种替代Typora，能够实现在线书写个人博客的方法。一次偶然的阅读，我了解了语雀。在网上检索后发现，已经有不少教程讲解如何通过语雀的钩子+Github Action+云函数的方法，在线同步语雀文章到github博客。在这片文章里，我总结了，今天搭建语雀过程中遇到的坑，和解决过程。看这篇文章之前，你应该已经在搭建语雀博客同步过程中遇到了不少阻碍吧。<br />我本人按照《[Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客](https://www.kikohk.top/article/3899/)》文章的教程进行搭建，所以细节不再赘述。遇到的坑，将在下面说说。\n<a name=\"4INOx\"></a>\n# 1：Hexo本地博客\n我很早就开始在本地计算机上使用Typora+markdown写博客了。早已习惯了Typora的风格和快捷键。通过win+shift+s截屏，然后直接粘贴到markdown中，Typora通过设置连接图传，自动上传，对于图片的粘贴非常友好。。目前还不知道语雀是否能够做到。<br />将Hexo博客安装到本地，是为了获取博客文件目录，修改主题，安装插件等等。同时也能够本地写作。<br />安装yuque-hexo插件后，需要在package.json中添加插件配置。原文推荐如下：<br />\n```yaml\n\"yuqueConfig\": {\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",\n    \"login\": \"语雀的id\",\n    \"repo\": \"语雀知识库名称\",\n    \"mdNameFormat\": \"title\",\n    \"postPath\": \"source/_posts\",\n    \"onlyPublished\": false\n  }\n```\n但是这个配置，会将我们本地编写的博客覆盖掉，如果你过去在hexo本地编写过，那你应该知道，本地博文同样储存在**source/_posts**。为了避免语雀同步后，覆盖原本地文章，需要将上述配置中的**\"postPath\": \"source/_posts\"**，修改为**\"postPath\": \"source/_posts/yuque\"。**\n<a name=\"LPiDG\"></a>\n# 2：Hexo同步Github仓库\n将整个博客目录同步到Github仓库，这样博客的许多重要配置文件，主题设置，文章md，页面设置都将得到保存，同时可以调用这个仓库的actions功能生成静态文件，将博客页面同步到github pages。。值得注意的是，Github免费仓库是公开的，你保存在仓库的token将会被别人知道，这会给博客一些依赖token功能，比如评论、百度seo带来威胁，当然我们希望人们总是善良的。<br />关于同步，在配置**.gitignore**文件时，建议添加**public**和**node_modules**这两个文件夹，public是动态生成的，node_module是hexo依赖，也可以动态生成，actions都能够自动生成，因此不需要额外同步上去。<br />themes文件夹下，是博客的主题，主题通常是从一个github仓库克隆过来的，在同步hexo博客时，如果主题文件夹下存在.git文件夹，则这个文件夹将被认为是博客仓库的子仓库，因此不会被上传。在github仓库中显示为**一个带右箭头的文件夹**。<br />如果要将主题上传到github，需要删除主题文件夹下的.git文件夹。<br />此外运行git指令\n```bash\ngit rm -r --cache .\n```\n此命令清除git缓存<br />在push的时候使用强制push\n```bash\ngit push -f\n```\n<br />\n<a name=\"GhdL3\"></a>\n# 3：Action\n通过Action，github可以循行hexo指令，比如将语雀文章同步到source/_post/yuque，生成静态文件，上传github pages等等。<br />目前这个action程序，还没有实现将语雀文章同步到github储存库的能力，只能本地同步，再本地同步到github。希望后人能够补全功能。\n<a name=\"4YLg4\"></a>\n# 4：云函数\n无论是腾讯云、阿里云还是谷歌亚马逊，都有云函数这个功能，使用上面也是大同小异。云函数的功能，在这里主要是为了接收语雀的回调，换句话说，每当我们更新删除新建知识库文章时，语雀就会向一个指定的url发起请求，云函数就用来接收这个请求。<br />云函数接收到请求后，调用github的api，运行action，action再执行hexo指令部署博客。<br />云函数内容：<br />\n```python\n# -*- coding: utf8 -*-\nimport requests\n\ndef main_handler(event, context):\n    r = requests.post(\"https://api.github.com/repos/你的github用户名/源码仓库名/dispatches\",\n    json = {\"event_type\": \"start\"},\n    headers = {\"User-Agent\":'curl/7.52.1',\n              'Content-Type': 'application/json',\n              'Accept': 'application/vnd.github.everest-preview+json',\n              'Authorization': 'token github的token'})\n\n    if r.status_code == 204:\n        return \"This's OK!\" \n    else:\n        return r.status_code\n\n```\n需要注意的是， **'Authorization': 'token github的token'**其中token是一串乱序字符串，在这串字符串前必须有“**token **”这个字串，否则测试时会返回404。\n> 'Authorization': 'token 77ed8fdca6***a00f0*****d73239790c6323dd'\n\n<a name=\"g5uiV\"></a>\n# 5：设置语雀hook\n在语雀的钩子中，将腾讯云函数的触发api填写进去，就可以尽情享受本地+在线写作的快乐了。\n<a name=\"a695v\"></a>\n# 6：参考资料\n 《[Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客](https://www.kikohk.top/article/3899/)》<br />《[语雀云编辑自动部署Hexo博客](https://www.yuque.com/gavinluo/blog/yuque-auto-2-hexo)**》**<br />**《**[语雀自动同步到hexo博客](https://cloud.tencent.com/developer/article/1665753)**》**<br />**《**[语雀文章用Serverless自动部署到Hexo博客](https://www.tangruiping.com/post/yque-serverless-github-actions-hexo.html)**》**\n",
    "body_draft": "我一直在寻找一种替代Typora，能够实现在线书写个人博客的方法。一次偶然的阅读，我了解了语雀。在网上检索后发现，已经有不少教程讲解如何通过语雀的钩子+Github Action+云函数的方法，在线同步语雀文章到github博客。在这片文章里，我总结了，今天搭建语雀过程中遇到的坑，和解决过程。看这篇文章之前，你应该已经在搭建语雀博客同步过程中遇到了不少阻碍吧。<br />我本人按照《[Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客](https://www.kikohk.top/article/3899/)》文章的教程进行搭建，所以细节不再赘述。遇到的坑，将在下面说说。\n<a name=\"4INOx\"></a>\n# 1：Hexo本地博客\n我很早就开始在本地计算机上使用Typora+markdown写博客了。早已习惯了Typora的风格和快捷键。通过win+shift+s截屏，然后直接粘贴到markdown中，Typora通过设置连接图传，自动上传，对于图片的粘贴非常友好。。目前还不知道语雀是否能够做到。<br />将Hexo博客安装到本地，是为了获取博客文件目录，修改主题，安装插件等等。同时也能够本地写作。<br />安装yuque-hexo插件后，需要在package.json中添加插件配置。原文推荐如下：<br />\n```yaml\n\"yuqueConfig\": {\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",\n    \"login\": \"语雀的id\",\n    \"repo\": \"语雀知识库名称\",\n    \"mdNameFormat\": \"title\",\n    \"postPath\": \"source/_posts\",\n    \"onlyPublished\": false\n  }\n```\n但是这个配置，会将我们本地编写的博客覆盖掉，如果你过去在hexo本地编写过，那你应该知道，本地博文同样储存在**source/_posts**。为了避免语雀同步后，覆盖原本地文章，需要将上述配置中的**\"postPath\": \"source/_posts\"**，修改为**\"postPath\": \"source/_posts/yuque\"。**\n<a name=\"LPiDG\"></a>\n# 2：Hexo同步Github仓库\n将整个博客目录同步到Github仓库，这样博客的许多重要配置文件，主题设置，文章md，页面设置都将得到保存，同时可以调用这个仓库的actions功能生成静态文件，将博客页面同步到github pages。。值得注意的是，Github免费仓库是公开的，你保存在仓库的token将会被别人知道，这会给博客一些依赖token功能，比如评论、百度seo带来威胁，当然我们希望人们总是善良的。<br />关于同步，在配置**.gitignore**文件时，建议添加**public**和**node_modules**这两个文件夹，public是动态生成的，node_module是hexo依赖，也可以动态生成，actions都能够自动生成，因此不需要额外同步上去。<br />themes文件夹下，是博客的主题，主题通常是从一个github仓库克隆过来的，在同步hexo博客时，如果主题文件夹下存在.git文件夹，则这个文件夹将被认为是博客仓库的子仓库，因此不会被上传。在github仓库中显示为**一个带右箭头的文件夹**。<br />如果要将主题上传到github，需要删除主题文件夹下的.git文件夹。<br />此外运行git指令\n```bash\ngit rm -r --cache .\n```\n此命令清除git缓存<br />在push的时候使用强制push\n```bash\ngit push -f\n```\n<br />\n<a name=\"GhdL3\"></a>\n# 3：Action\n通过Action，github可以循行hexo指令，比如将语雀文章同步到source/_post/yuque，生成静态文件，上传github pages等等。<br />目前这个action程序，还没有实现将语雀文章同步到github储存库的能力，只能本地同步，再本地同步到github。希望后人能够补全功能。\n<a name=\"4YLg4\"></a>\n# 4：云函数\n无论是腾讯云、阿里云还是谷歌亚马逊，都有云函数这个功能，使用上面也是大同小异。云函数的功能，在这里主要是为了接收语雀的回调，换句话说，每当我们更新删除新建知识库文章时，语雀就会向一个指定的url发起请求，云函数就用来接收这个请求。<br />云函数接收到请求后，调用github的api，运行action，action再执行hexo指令部署博客。<br />云函数内容：<br />\n```python\n# -*- coding: utf8 -*-\nimport requests\n\ndef main_handler(event, context):\n    r = requests.post(\"https://api.github.com/repos/你的github用户名/源码仓库名/dispatches\",\n    json = {\"event_type\": \"start\"},\n    headers = {\"User-Agent\":'curl/7.52.1',\n              'Content-Type': 'application/json',\n              'Accept': 'application/vnd.github.everest-preview+json',\n              'Authorization': 'token github的token'})\n\n    if r.status_code == 204:\n        return \"This's OK!\" \n    else:\n        return r.status_code\n\n```\n需要注意的是， **'Authorization': 'token github的token'**其中token是一串乱序字符串，在这串字符串前必须有“**token **”这个字串，否则测试时会返回404。\n> 'Authorization': 'token 77ed8fdca6***a00f0*****d73239790c6323dd'\n\n<a name=\"g5uiV\"></a>\n# 5：设置语雀hook\n在语雀的钩子中，将腾讯云函数的触发api填写进去，就可以尽情享受本地+在线写作的快乐了。\n<a name=\"a695v\"></a>\n# 6：参考资料\n 《[Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客](https://www.kikohk.top/article/3899/)》<br />《[语雀云编辑自动部署Hexo博客](https://www.yuque.com/gavinluo/blog/yuque-auto-2-hexo)**》**<br />**《**[语雀自动同步到hexo博客](https://cloud.tencent.com/developer/article/1665753)**》**<br />**《**[语雀文章用Serverless自动部署到Hexo博客](https://www.tangruiping.com/post/yque-serverless-github-actions-hexo.html)**》**\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B35%2C2%2C0%2C1%5D%2C%5B35%2C2%2C0%2C1%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我一直在寻找一种替代Typora，能够实现在线书写个人博客的方法。一次偶然的阅读，我了解了语雀。在网上检索后发现，已经有不少教程讲解如何通过语雀的钩子+Github Action+云函数的方法，在线同步语雀文章到github博客。在这片文章里，我总结了，今天搭建语雀过程中遇到的坑，和解决过程。看这篇文章之前，你应该已经在搭建语雀博客同步过程中遇到了不少阻碍吧。</p><p data-lake-id=\"d6b2aca47e913c0145929d11c619ab14\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我本人按照《<a href=\"https://www.kikohk.top/article/3899/\" target=\"_blank\" class=\"\">Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客</a>》文章的教程进行搭建，所以细节不再赘述。遇到的坑，将在下面说说。</p><h1 data-lake-id=\"2e0b04f3c2a6bb238ce324223f4addbd\" id=\"4INOx\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">1：Hexo本地博客</h1><p data-lake-id=\"edb51e5d9c20a7b68b240c9c704160a4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我很早就开始在本地计算机上使用Typora+markdown写博客了。早已习惯了Typora的风格和快捷键。通过win+shift+s截屏，然后直接粘贴到markdown中，Typora通过设置连接图传，自动上传，对于图片的粘贴非常友好。。目前还不知道语雀是否能够做到。</p><p data-lake-id=\"08cf3b074554d9b27c0ac1e5d62dbee5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">将Hexo博客安装到本地，是为了获取博客文件目录，修改主题，安装插件等等。同时也能够本地写作。</p><p data-lake-id=\"ac679aea161b114e8822a138429b637a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">安装yuque-hexo插件后，需要在package.json中添加插件配置。原文推荐如下：<span><br></span></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"JVAe7\" class=\"lake-card-margin\" data-language=\"yaml\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"yuqueConfig\"</span>: <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">{</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"baseUrl\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://www.yuque.com/api/v2\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"login\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"语雀的id\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"repo\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"语雀知识库名称\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"mdNameFormat\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"title\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"postPath\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"source/_posts\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">,</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    \"onlyPublished\"</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></span></pre></div></div></div><p data-lake-id=\"53f02f8220ac1308a246ee135d4b99af\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">但是这个配置，会将我们本地编写的博客覆盖掉，如果你过去在hexo本地编写过，那你应该知道，本地博文同样储存在<strong>source/_posts</strong>。为了避免语雀同步后，覆盖原本地文章，需要将上述配置中的<strong>\"postPath\": \"source/_posts\"</strong>​，修改为<strong>\"postPath\": \"source/_posts/yuque\"。</strong>​</p><h1 data-lake-id=\"da66cca8b8782b7cf6e73141a606e533\" id=\"LPiDG\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">2：Hexo同步Github仓库</h1><p data-lake-id=\"9994e3a6f52fff30e1eb598e41ae8ef3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">将整个博客目录同步到Github仓库，这样博客的许多重要配置文件，主题设置，文章md，页面设置都将得到保存，同时可以调用这个仓库的actions功能生成静态文件，将博客页面同步到github pages。。值得注意的是，Github免费仓库是公开的，你保存在仓库的token将会被别人知道，这会给博客一些依赖token功能，比如评论、百度seo带来威胁，当然我们希望人们总是善良的。</p><p data-lake-id=\"ee88cd2bcb9037a48b2094213527f3ad\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">关于同步，在配置<strong>​.gitignore</strong>​文件时，建议添加<strong>​public</strong>和<strong>​node_modules</strong>​这两个文件夹，public是动态生成的，node_module是hexo依赖，也可以动态生成，actions都能够自动生成，因此不需要额外同步上去。</p><p data-lake-id=\"85d0d3323e7d9c5b78b2978f096a2037\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">themes文件夹下，是博客的主题，主题通常是从一个github仓库克隆过来的，在同步hexo博客时，如果主题文件夹下存在.git文件夹，则这个文件夹将被认为是博客仓库的子仓库，因此不会被上传。在github仓库中显示为<strong>​一个带右箭头的文件夹</strong>。</p><p data-lake-id=\"05f39e3b79a907b604be3dd539264e5b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果要将主题上传到github，需要删除主题文件夹下的.git文件夹。</p><p data-lake-id=\"8eb8f2157def01d2fb60b6196d2893ee\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">此外运行git指令</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"iRCn2\" class=\"lake-card-margin\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rm</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-r</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--cache</span> .</span></span></pre></div></div></div><p data-lake-id=\"bec6b9f982ed6559035b272e050aba68\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">此命令清除git缓存</p><p data-lake-id=\"b80e14d12a215335fc265d08480764a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在push的时候使用强制push</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"QaQOy\" class=\"lake-card-margin\" data-language=\"bash\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">git</span> push <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-f</span></span></span></pre></div></div></div><p data-lake-id=\"c5023333d201f2f9f0b96ba4ea00c330\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><br></span></p><h1 data-lake-id=\"6258b045f446e966685eb373d978c45a\" id=\"GhdL3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">3：Action</h1><p data-lake-id=\"48dd850b9fcc95aec9a53cdb6624fac1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">通过Action，github可以循行hexo指令，比如将语雀文章同步到source/_post/yuque，生成静态文件，上传github pages等等。</p><p data-lake-id=\"8b3dbc333e465be1a0136cf4990ed27e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">目前这个action程序，还没有实现将语雀文章同步到github储存库的能力，只能本地同步，再本地同步到github。希望后人能够补全功能。</p><h1 data-lake-id=\"bb1c81f8336e1e62e56fe4942728c955\" id=\"4YLg4\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">4：云函数</h1><p data-lake-id=\"b7aa1bca39c416ac3643cc0c2bc0902e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">无论是腾讯云、阿里云还是谷歌亚马逊，都有云函数这个功能，使用上面也是大同小异。云函数的功能，在这里主要是为了接收语雀的回调，换句话说，每当我们更新删除新建知识库文章时，语雀就会向一个指定的url发起请求，云函数就用来接收这个请求。</p><p data-lake-id=\"8be60b41da6dcfdaf6ee681a0ba4ac89\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">云函数接收到请求后，调用github的api，运行action，action再执行hexo指令部署博客。</p><p data-lake-id=\"68e1470680b0d94f3b68bcbfdcf97391\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">云函数内容：<br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"rL2xX\" class=\"lake-card-margin\" data-language=\"python\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"CodeMirror-sizer\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># -*- coding: utf8 -*-</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">import</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">requests</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">def</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">main_handler</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">event</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">context</span>):\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">r</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">requests</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">post</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://api.github.com/repos/你的github用户名/源码仓库名/dispatches\"</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">json</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"event_type\"</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"start\"</span>},\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">headers</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> {<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"User-Agent\"</span>:<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'curl/7.52.1'</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">              <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'Content-Type'</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'application/json'</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">              <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'Accept'</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'application/vnd.github.everest-preview+json'</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">              <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'Authorization'</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'token github的token'</span>})\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">if</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">r</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">status_code</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">==</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">204</span>:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"This's OK!\"</span> \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">else</span>:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">return</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">r</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">status_code</span>\n</span></span></pre></div></div></div><p data-lake-id=\"b645f0e1caaf4c395fae77b2c08088dc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">需要注意的是，​&nbsp;<strong>'Authorization': 'token github的token'</strong>​其中token是一串乱序字符串，在这串字符串前必须有“<strong>token </strong>​”这个字串，否则测试时会返回404。</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"5a0c69899764c35b71ba8dd953eb336c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #a31515;\">'Authorization'</span><span style=\"color: #000000;\">: </span><span style=\"color: #a31515;\">'token 77ed8fdca6***a00f0*****d73239790c6323dd'</span></p></blockquote><h1 data-lake-id=\"36ce47363ec4b80229a1461bf2d7c335\" id=\"g5uiV\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">5：设置语雀hook</h1><p data-lake-id=\"f8abea08583ddc18d63ebe8c8b38d349\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在语雀的钩子中，将腾讯云函数的触发api填写进去，就可以尽情享受本地+在线写作的快乐了。</p><h1 data-lake-id=\"7fa254f1b17d444fc659b7b8d19372d2\" id=\"a695v\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 28px; line-height: 36px;\">6：参考资料</h1><p data-lake-id=\"6835a3689bd64bf21d5e3ccfb5442cf4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"> 《<a href=\"https://www.kikohk.top/article/3899/\" target=\"_blank\">Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客</a>》</p><p data-lake-id=\"51726781d06ec1614a766e1f4ede043d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">《<a href=\"https://www.yuque.com/gavinluo/blog/yuque-auto-2-hexo\" target=\"_blank\" class=\"\">语雀云编辑自动部署Hexo博客</a><strong>》</strong></p><p data-lake-id=\"ab15d59f8765e8ab9cbaa2d3e4bdd187\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>《</strong><a href=\"https://cloud.tencent.com/developer/article/1665753\" target=\"_blank\" class=\"\"><span>语雀自动同步到hexo博客</span></a><strong>》</strong></p><p data-lake-id=\"53e07fc8275e0ecfb67d5e36db5de920\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>《</strong><a href=\"https://www.tangruiping.com/post/yque-serverless-github-actions-hexo.html\" target=\"_blank\" class=\"\">语雀文章用Serverless自动部署到Hexo博客</a><strong>》</strong></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">我一直在寻找一种替代Typora，能够实现在线书写个人博客的方法。一次偶然的阅读，我了解了语雀。在网上检索后发现，已经有不少教程讲解如何通过语雀的钩子+Github Action+云函数的方法，在线同步语雀文章到github博客。在这片文章里，我总结了，今天搭建语雀过程中遇到的坑，和解决过程。看这篇文章之前，你应该已经在搭建语雀博客同步过程中遇到了不少阻碍吧。</p><p data-lake-id=\"d6b2aca47e913c0145929d11c619ab14\">我本人按照《<a href=\"https://www.kikohk.top/article/3899/\" target=\"_blank\">Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客</a>》文章的教程进行搭建，所以细节不再赘述。遇到的坑，将在下面说说。</p><h1 data-lake-id=\"2e0b04f3c2a6bb238ce324223f4addbd\" id=\"4INOx\">1：Hexo本地博客</h1><p data-lake-id=\"edb51e5d9c20a7b68b240c9c704160a4\">我很早就开始在本地计算机上使用Typora+markdown写博客了。早已习惯了Typora的风格和快捷键。通过win+shift+s截屏，然后直接粘贴到markdown中，Typora通过设置连接图传，自动上传，对于图片的粘贴非常友好。。目前还不知道语雀是否能够做到。</p><p data-lake-id=\"08cf3b074554d9b27c0ac1e5d62dbee5\">将Hexo博客安装到本地，是为了获取博客文件目录，修改主题，安装插件等等。同时也能够本地写作。</p><p data-lake-id=\"ac679aea161b114e8822a138429b637a\">安装yuque-hexo插件后，需要在package.json中添加插件配置。原文推荐如下：<span><br /></span></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%5C%22yuqueConfig%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22baseUrl%5C%22%3A%20%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%5Cn%20%20%20%20%5C%22login%5C%22%3A%20%5C%22%E8%AF%AD%E9%9B%80%E7%9A%84id%5C%22%2C%5Cn%20%20%20%20%5C%22repo%5C%22%3A%20%5C%22%E8%AF%AD%E9%9B%80%E7%9F%A5%E8%AF%86%E5%BA%93%E5%90%8D%E7%A7%B0%5C%22%2C%5Cn%20%20%20%20%5C%22mdNameFormat%5C%22%3A%20%5C%22title%5C%22%2C%5Cn%20%20%20%20%5C%22postPath%5C%22%3A%20%5C%22source%2F_posts%5C%22%2C%5Cn%20%20%20%20%5C%22onlyPublished%5C%22%3A%20false%5Cn%20%20%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22JVAe7%22%7D\"></card><p data-lake-id=\"53f02f8220ac1308a246ee135d4b99af\">但是这个配置，会将我们本地编写的博客覆盖掉，如果你过去在hexo本地编写过，那你应该知道，本地博文同样储存在<strong>source/_posts</strong>。为了避免语雀同步后，覆盖原本地文章，需要将上述配置中的<strong>&quot;postPath&quot;: &quot;source/_posts&quot;</strong>，修改为<strong>&quot;postPath&quot;: &quot;source/_posts/yuque&quot;。</strong></p><h1 data-lake-id=\"da66cca8b8782b7cf6e73141a606e533\" id=\"LPiDG\">2：Hexo同步Github仓库</h1><p data-lake-id=\"9994e3a6f52fff30e1eb598e41ae8ef3\">将整个博客目录同步到Github仓库，这样博客的许多重要配置文件，主题设置，文章md，页面设置都将得到保存，同时可以调用这个仓库的actions功能生成静态文件，将博客页面同步到github pages。。值得注意的是，Github免费仓库是公开的，你保存在仓库的token将会被别人知道，这会给博客一些依赖token功能，比如评论、百度seo带来威胁，当然我们希望人们总是善良的。</p><p data-lake-id=\"ee88cd2bcb9037a48b2094213527f3ad\">关于同步，在配置<strong>.gitignore</strong>文件时，建议添加<strong>public</strong>和<strong>node_modules</strong>这两个文件夹，public是动态生成的，node_module是hexo依赖，也可以动态生成，actions都能够自动生成，因此不需要额外同步上去。</p><p data-lake-id=\"85d0d3323e7d9c5b78b2978f096a2037\">themes文件夹下，是博客的主题，主题通常是从一个github仓库克隆过来的，在同步hexo博客时，如果主题文件夹下存在.git文件夹，则这个文件夹将被认为是博客仓库的子仓库，因此不会被上传。在github仓库中显示为<strong>一个带右箭头的文件夹</strong>。</p><p data-lake-id=\"05f39e3b79a907b604be3dd539264e5b\">如果要将主题上传到github，需要删除主题文件夹下的.git文件夹。</p><p data-lake-id=\"8eb8f2157def01d2fb60b6196d2893ee\">此外运行git指令</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20rm%20-r%20--cache%20.%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22iRCn2%22%7D\"></card><p data-lake-id=\"bec6b9f982ed6559035b272e050aba68\">此命令清除git缓存</p><p data-lake-id=\"b80e14d12a215335fc265d08480764a2\">在push的时候使用强制push</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20push%20-f%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22QaQOy%22%7D\"></card><p data-lake-id=\"c5023333d201f2f9f0b96ba4ea00c330\"><span><br /></span></p><h1 data-lake-id=\"6258b045f446e966685eb373d978c45a\" id=\"GhdL3\">3：Action</h1><p data-lake-id=\"48dd850b9fcc95aec9a53cdb6624fac1\">通过Action，github可以循行hexo指令，比如将语雀文章同步到source/_post/yuque，生成静态文件，上传github pages等等。</p><p data-lake-id=\"8b3dbc333e465be1a0136cf4990ed27e\">目前这个action程序，还没有实现将语雀文章同步到github储存库的能力，只能本地同步，再本地同步到github。希望后人能够补全功能。</p><h1 data-lake-id=\"bb1c81f8336e1e62e56fe4942728c955\" id=\"4YLg4\">4：云函数</h1><p data-lake-id=\"b7aa1bca39c416ac3643cc0c2bc0902e\">无论是腾讯云、阿里云还是谷歌亚马逊，都有云函数这个功能，使用上面也是大同小异。云函数的功能，在这里主要是为了接收语雀的回调，换句话说，每当我们更新删除新建知识库文章时，语雀就会向一个指定的url发起请求，云函数就用来接收这个请求。</p><p data-lake-id=\"8be60b41da6dcfdaf6ee681a0ba4ac89\">云函数接收到请求后，调用github的api，运行action，action再执行hexo指令部署博客。</p><p data-lake-id=\"68e1470680b0d94f3b68bcbfdcf97391\">云函数内容：<br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22python%22%2C%22code%22%3A%22%23%20-*-%20coding%3A%20utf8%20-*-%5Cnimport%20requests%5Cn%5Cndef%20main_handler(event%2C%20context)%3A%5Cn%20%20%20%20r%20%3D%20requests.post(%5C%22https%3A%2F%2Fapi.github.com%2Frepos%2F%E4%BD%A0%E7%9A%84github%E7%94%A8%E6%88%B7%E5%90%8D%2F%E6%BA%90%E7%A0%81%E4%BB%93%E5%BA%93%E5%90%8D%2Fdispatches%5C%22%2C%5Cn%20%20%20%20json%20%3D%20%7B%5C%22event_type%5C%22%3A%20%5C%22start%5C%22%7D%2C%5Cn%20%20%20%20headers%20%3D%20%7B%5C%22User-Agent%5C%22%3A'curl%2F7.52.1'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Content-Type'%3A%20'application%2Fjson'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Accept'%3A%20'application%2Fvnd.github.everest-preview%2Bjson'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Authorization'%3A%20'token%20github%E7%9A%84token'%7D)%5Cn%5Cn%20%20%20%20if%20r.status_code%20%3D%3D%20204%3A%5Cn%20%20%20%20%20%20%20%20return%20%5C%22This's%20OK!%5C%22%20%5Cn%20%20%20%20else%3A%5Cn%20%20%20%20%20%20%20%20return%20r.status_code%5Cn%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22rL2xX%22%7D\"></card><p data-lake-id=\"b645f0e1caaf4c395fae77b2c08088dc\">需要注意的是， <strong>'Authorization': 'token github的token'</strong>其中token是一串乱序字符串，在这串字符串前必须有“<strong>token </strong>”这个字串，否则测试时会返回404。</p><blockquote><p data-lake-id=\"5a0c69899764c35b71ba8dd953eb336c\"><span style=\"color: #a31515;\">'Authorization'</span><span style=\"color: #000000;\">: </span><span style=\"color: #a31515;\">'token 77ed8fdca6***a00f0*****d73239790c6323dd'</span></p></blockquote><h1 data-lake-id=\"36ce47363ec4b80229a1461bf2d7c335\" id=\"g5uiV\">5：设置语雀hook</h1><p data-lake-id=\"f8abea08583ddc18d63ebe8c8b38d349\">在语雀的钩子中，将腾讯云函数的触发api填写进去，就可以尽情享受本地+在线写作的快乐了。</p><h1 data-lake-id=\"7fa254f1b17d444fc659b7b8d19372d2\" id=\"a695v\">6：参考资料</h1><p data-lake-id=\"6835a3689bd64bf21d5e3ccfb5442cf4\"> 《<a href=\"https://www.kikohk.top/article/3899/\" target=\"_blank\">Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客</a>》</p><p data-lake-id=\"51726781d06ec1614a766e1f4ede043d\">《<a href=\"https://www.yuque.com/gavinluo/blog/yuque-auto-2-hexo\" target=\"_blank\">语雀云编辑自动部署Hexo博客</a><strong>》</strong></p><p data-lake-id=\"ab15d59f8765e8ab9cbaa2d3e4bdd187\"><strong>《</strong><a href=\"https://cloud.tencent.com/developer/article/1665753\" target=\"_blank\"><span>语雀自动同步到hexo博客</span></a><strong>》</strong></p><p data-lake-id=\"53e07fc8275e0ecfb67d5e36db5de920\"><strong>《</strong><a href=\"https://www.tangruiping.com/post/yque-serverless-github-actions-hexo.html\" target=\"_blank\">语雀文章用Serverless自动部署到Hexo博客</a><strong>》<cursor /></strong></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">我一直在寻找一种替代Typora，能够实现在线书写个人博客的方法。一次偶然的阅读，我了解了语雀。在网上检索后发现，已经有不少教程讲解如何通过语雀的钩子+Github Action+云函数的方法，在线同步语雀文章到github博客。在这片文章里，我总结了，今天搭建语雀过程中遇到的坑，和解决过程。看这篇文章之前，你应该已经在搭建语雀博客同步过程中遇到了不少阻碍吧。</p><p data-lake-id=\"d6b2aca47e913c0145929d11c619ab14\">我本人按照《<a href=\"https://www.kikohk.top/article/3899/\" target=\"_blank\">Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客</a>》文章的教程进行搭建，所以细节不再赘述。遇到的坑，将在下面说说。</p><h1 data-lake-id=\"2e0b04f3c2a6bb238ce324223f4addbd\" id=\"4INOx\">1：Hexo本地博客</h1><p data-lake-id=\"edb51e5d9c20a7b68b240c9c704160a4\">我很早就开始在本地计算机上使用Typora+markdown写博客了。早已习惯了Typora的风格和快捷键。通过win+shift+s截屏，然后直接粘贴到markdown中，Typora通过设置连接图传，自动上传，对于图片的粘贴非常友好。。目前还不知道语雀是否能够做到。</p><p data-lake-id=\"08cf3b074554d9b27c0ac1e5d62dbee5\">将Hexo博客安装到本地，是为了获取博客文件目录，修改主题，安装插件等等。同时也能够本地写作。</p><p data-lake-id=\"ac679aea161b114e8822a138429b637a\">安装yuque-hexo插件后，需要在package.json中添加插件配置。原文推荐如下：<span><br /></span></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%5C%22yuqueConfig%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22baseUrl%5C%22%3A%20%5C%22https%3A%2F%2Fwww.yuque.com%2Fapi%2Fv2%5C%22%2C%5Cn%20%20%20%20%5C%22login%5C%22%3A%20%5C%22%E8%AF%AD%E9%9B%80%E7%9A%84id%5C%22%2C%5Cn%20%20%20%20%5C%22repo%5C%22%3A%20%5C%22%E8%AF%AD%E9%9B%80%E7%9F%A5%E8%AF%86%E5%BA%93%E5%90%8D%E7%A7%B0%5C%22%2C%5Cn%20%20%20%20%5C%22mdNameFormat%5C%22%3A%20%5C%22title%5C%22%2C%5Cn%20%20%20%20%5C%22postPath%5C%22%3A%20%5C%22source%2F_posts%5C%22%2C%5Cn%20%20%20%20%5C%22onlyPublished%5C%22%3A%20false%5Cn%20%20%7D%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22JVAe7%22%7D\"></card><p data-lake-id=\"53f02f8220ac1308a246ee135d4b99af\">但是这个配置，会将我们本地编写的博客覆盖掉，如果你过去在hexo本地编写过，那你应该知道，本地博文同样储存在<strong>source/_posts</strong>。为了避免语雀同步后，覆盖原本地文章，需要将上述配置中的<strong>&quot;postPath&quot;: &quot;source/_posts&quot;</strong>，修改为<strong>&quot;postPath&quot;: &quot;source/_posts/yuque&quot;。</strong></p><h1 data-lake-id=\"da66cca8b8782b7cf6e73141a606e533\" id=\"LPiDG\">2：Hexo同步Github仓库</h1><p data-lake-id=\"9994e3a6f52fff30e1eb598e41ae8ef3\">将整个博客目录同步到Github仓库，这样博客的许多重要配置文件，主题设置，文章md，页面设置都将得到保存，同时可以调用这个仓库的actions功能生成静态文件，将博客页面同步到github pages。。值得注意的是，Github免费仓库是公开的，你保存在仓库的token将会被别人知道，这会给博客一些依赖token功能，比如评论、百度seo带来威胁，当然我们希望人们总是善良的。</p><p data-lake-id=\"ee88cd2bcb9037a48b2094213527f3ad\">关于同步，在配置<strong>.gitignore</strong>文件时，建议添加<strong>public</strong>和<strong>node_modules</strong>这两个文件夹，public是动态生成的，node_module是hexo依赖，也可以动态生成，actions都能够自动生成，因此不需要额外同步上去。</p><p data-lake-id=\"85d0d3323e7d9c5b78b2978f096a2037\">themes文件夹下，是博客的主题，主题通常是从一个github仓库克隆过来的，在同步hexo博客时，如果主题文件夹下存在.git文件夹，则这个文件夹将被认为是博客仓库的子仓库，因此不会被上传。在github仓库中显示为<strong>一个带右箭头的文件夹</strong>。</p><p data-lake-id=\"05f39e3b79a907b604be3dd539264e5b\">如果要将主题上传到github，需要删除主题文件夹下的.git文件夹。</p><p data-lake-id=\"8eb8f2157def01d2fb60b6196d2893ee\">此外运行git指令</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20rm%20-r%20--cache%20.%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22iRCn2%22%7D\"></card><p data-lake-id=\"bec6b9f982ed6559035b272e050aba68\">此命令清除git缓存</p><p data-lake-id=\"b80e14d12a215335fc265d08480764a2\">在push的时候使用强制push</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22git%20push%20-f%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22QaQOy%22%7D\"></card><p data-lake-id=\"c5023333d201f2f9f0b96ba4ea00c330\"><span><br /></span></p><h1 data-lake-id=\"6258b045f446e966685eb373d978c45a\" id=\"GhdL3\">3：Action</h1><p data-lake-id=\"48dd850b9fcc95aec9a53cdb6624fac1\">通过Action，github可以循行hexo指令，比如将语雀文章同步到source/_post/yuque，生成静态文件，上传github pages等等。</p><p data-lake-id=\"8b3dbc333e465be1a0136cf4990ed27e\">目前这个action程序，还没有实现将语雀文章同步到github储存库的能力，只能本地同步，再本地同步到github。希望后人能够补全功能。</p><h1 data-lake-id=\"bb1c81f8336e1e62e56fe4942728c955\" id=\"4YLg4\">4：云函数</h1><p data-lake-id=\"b7aa1bca39c416ac3643cc0c2bc0902e\">无论是腾讯云、阿里云还是谷歌亚马逊，都有云函数这个功能，使用上面也是大同小异。云函数的功能，在这里主要是为了接收语雀的回调，换句话说，每当我们更新删除新建知识库文章时，语雀就会向一个指定的url发起请求，云函数就用来接收这个请求。</p><p data-lake-id=\"8be60b41da6dcfdaf6ee681a0ba4ac89\">云函数接收到请求后，调用github的api，运行action，action再执行hexo指令部署博客。</p><p data-lake-id=\"68e1470680b0d94f3b68bcbfdcf97391\">云函数内容：<br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22python%22%2C%22code%22%3A%22%23%20-*-%20coding%3A%20utf8%20-*-%5Cnimport%20requests%5Cn%5Cndef%20main_handler(event%2C%20context)%3A%5Cn%20%20%20%20r%20%3D%20requests.post(%5C%22https%3A%2F%2Fapi.github.com%2Frepos%2F%E4%BD%A0%E7%9A%84github%E7%94%A8%E6%88%B7%E5%90%8D%2F%E6%BA%90%E7%A0%81%E4%BB%93%E5%BA%93%E5%90%8D%2Fdispatches%5C%22%2C%5Cn%20%20%20%20json%20%3D%20%7B%5C%22event_type%5C%22%3A%20%5C%22start%5C%22%7D%2C%5Cn%20%20%20%20headers%20%3D%20%7B%5C%22User-Agent%5C%22%3A'curl%2F7.52.1'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Content-Type'%3A%20'application%2Fjson'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Accept'%3A%20'application%2Fvnd.github.everest-preview%2Bjson'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Authorization'%3A%20'token%20github%E7%9A%84token'%7D)%5Cn%5Cn%20%20%20%20if%20r.status_code%20%3D%3D%20204%3A%5Cn%20%20%20%20%20%20%20%20return%20%5C%22This's%20OK!%5C%22%20%5Cn%20%20%20%20else%3A%5Cn%20%20%20%20%20%20%20%20return%20r.status_code%5Cn%22%2C%22heightLimit%22%3Atrue%2C%22margin%22%3Atrue%2C%22id%22%3A%22rL2xX%22%7D\"></card><p data-lake-id=\"b645f0e1caaf4c395fae77b2c08088dc\">需要注意的是， <strong>'Authorization': 'token github的token'</strong>其中token是一串乱序字符串，在这串字符串前必须有“<strong>token </strong>”这个字串，否则测试时会返回404。</p><blockquote><p data-lake-id=\"5a0c69899764c35b71ba8dd953eb336c\"><span style=\"color: #a31515;\">'Authorization'</span><span style=\"color: #000000;\">: </span><span style=\"color: #a31515;\">'token 77ed8fdca6***a00f0*****d73239790c6323dd'</span></p></blockquote><h1 data-lake-id=\"36ce47363ec4b80229a1461bf2d7c335\" id=\"g5uiV\">5：设置语雀hook</h1><p data-lake-id=\"f8abea08583ddc18d63ebe8c8b38d349\">在语雀的钩子中，将腾讯云函数的触发api填写进去，就可以尽情享受本地+在线写作的快乐了。</p><h1 data-lake-id=\"7fa254f1b17d444fc659b7b8d19372d2\" id=\"a695v\">6：参考资料</h1><p data-lake-id=\"6835a3689bd64bf21d5e3ccfb5442cf4\"> 《<a href=\"https://www.kikohk.top/article/3899/\" target=\"_blank\">Hexo+GitHub+Action+腾讯云函数+语雀搭建自动化个人博客</a>》</p><p data-lake-id=\"51726781d06ec1614a766e1f4ede043d\">《<a href=\"https://www.yuque.com/gavinluo/blog/yuque-auto-2-hexo\" target=\"_blank\">语雀云编辑自动部署Hexo博客</a><strong>》</strong></p><p data-lake-id=\"ab15d59f8765e8ab9cbaa2d3e4bdd187\"><strong>《</strong><a href=\"https://cloud.tencent.com/developer/article/1665753\" target=\"_blank\"><span>语雀自动同步到hexo博客</span></a><strong>》</strong></p><p data-lake-id=\"53e07fc8275e0ecfb67d5e36db5de920\"><strong>《</strong><a href=\"https://www.tangruiping.com/post/yque-serverless-github-actions-hexo.html\" target=\"_blank\">语雀文章用Serverless自动部署到Hexo博客</a><strong>》<cursor /></strong></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-02-20T22:56:08.000Z",
    "deleted_at": null,
    "created_at": "2021-02-20T22:01:07.000Z",
    "updated_at": "2021-02-20T22:56:10.000Z",
    "published_at": "2021-02-20T22:56:08.000Z",
    "first_published_at": "2021-02-20T22:56:08.000Z",
    "word_count": 1420,
    "cover": "",
    "description": null,
    "custom_description": "我一直在寻找一种替代Typora，能够实现在线书写个人博客的方法。一次偶然的阅读，我了解了语雀。在网上检索后发现，已经有不少教程讲解如何通过语雀的钩子+Github Action+云函数的方法，在线同步语雀文章到github博客。在这片文章里，我总结了，今天搭建语雀过程中遇到的坑，和解决过程。...",
    "hits": 0,
    "_serializer": "v2.doc_detail"
  }
]